version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - rebuyData:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - app-network
  api:
    container_name: api
    image: scottdkey/rebuy-api:${API_VERSION}
    pull_policy: always
    build:
      context: ./api
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - ${API_PORT}:3000
    expose:
      - ${API_PORT}
    env_file:
      - .env
    environment:
      - PORT=${API_PORT}
      - FRONTEND_URL=${FRONTEND_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - postgres
    networks:
      - app-network
  frontend:
    container_name: frontend
    image: scottdkey/rebuy-frontend:${API_VERSION}
    pull_policy: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - ${FRONTEND_PORT}:5173
    env_file:
      - .env
    expose:
      - ${FRONTEND_PORT}
    environment:
      - VITE_BACKEND_URL=http://localhost:${API_PORT}
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  rebuyData:
